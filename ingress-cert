$ openssl genrsa -out CA_key.pem 2048
$ openssl req -x509 -new -nodes -sha256 -days 3650 -key CA_key.pem -out CA_cert.pem -subj "/C=SG/ST=SG/L=SG/O=SG/CN=lab.ocp.php"
Create a new certificate signing request with the following steps:
$ openssl genrsa -out ingress.key 2048
$ openssl req -new -key ingress.key -out ingress.crt -subj "/CN=*.apps.lab.ocp.php"

    Create the OpenSSL X509v3 extensions file with Subject Alternative Names:

Raw

cat openssl-ocp.cnf
authorityKeyIdentifier=keyid,issuer
keyUsage=digitalSignature
extendedKeyUsage=serverAuth
subjectAltName = @alt_names
[alt_names]
DNS.1 = api.lab.ocp.php
DNS.2 = *.apps.lab.ocp.php

    Sign the certificate request using the CA and including the above extensions file. Note the parameter -extfile:

Raw

openssl x509 -req -in ingress.crt -CA CA_cert.pem -CAkey CA_key.pem -CAcreateserial -out ingress.key -days 825 -sha256  -extfile openssl-ocp.cnf

   The self-signed CA certificate for the registry must be put in the /etc/pki/ca-trust/source/anchors/ folder.
    The update-ca-trust extract command must then be run to have the host trust the new CA certificate.
==============================================================
extract the key and cert
openssl rsa -in okd-CA_key.pem -text
openssl x509 -in okd-CA_key.pem -text 

https://www.golinuxcloud.com/openssl-view-certificate/
https://www.shellhacks.com/openssl-check-private-key-matches-ssl-certificate-csr/
