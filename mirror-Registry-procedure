Copy the pull secret in the ~/.docker/config.json
oc mirror init /home/test-nfs > imageset-config.yaml 
oc mirror --config ./imageset-config.yaml docker://ocp-service.ocp.io:8443/ocp-mirror -v1  --dest-skip-tls false
===================================================================

https://docs.redhat.com/en/documentation/red_hat_openshift_container_storage/4.5/html/preparing_to_deploy_in_a_disconnected_environment/building-and-mirroring-the-red-hat-operator-catalog_rhocs#building-and-mirroring-the-red-hat-operator-catalog_rhocs
j

./mirror-registry install -k --quayHostname $(hostname -f) --sslCert ssl.pem  --sslKey ssl.key  --ssh-key /root/.ssh/quay_installer
or 
./mirror-registry install --quayHostname ocp-service.ocp.io --sslCheckSkip 

export OCP_RELEASE="4.14.51"

export LOCAL_REGISTRY="ocp-service.lab.ocp.php:8443"
export LOCAL_REPOSITORY="openshift4/ocpv4"
export LOCAL_RELEASE_IMAGES_REPOSITORY="ocpv4/openshift4-release-images"
export PRODUCT_REPO="openshift-release-dev"
export LOCAL_SECRET_JSON="~/.docker/config.json"
export RELEASE_NAME="ocp-release"
export ARCHITECTURE="x86_64"

################
oc adm release mirror -a ${LOCAL_SECRET_JSON} --from=quay.io/${PRODUCT_REPO}/${RELEASE_NAME}:${OCP_RELEASE}-${ARCHITECTURE} \
--to=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY} --to-release-image=${LOCAL_REGISTRY}/${LOCAL_REPOSITORY}:${OCP_RELEASE}-${ARCHITECTURE}
#################


 openssl req -x509 -newkey rsa:4096 -days 365 -keyout ca-key.pem -out ca-cert.pem 
 openssl x509 -in ca-cert.pem -noout -text
 openssl req -newkey rsa:4096 -keyout server-key.pem -out server-req.pem
 openssl x509 -req -in server-req.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out server-signed-cert.pem 

==============
openssl genrsa -out root-CA.key 2048
openssl req -x509 -new -key root-CA.key -out root-CA.crt -days 1000 -subj "/C=SG/ST=SG/L=SG/O=SG/CN=lab.ocp.php"
openssl genrsa -out ssl.key 2048
openssl req -new -key ssl.key -out ssl.csr -subj "/C=SG/ST=SG/L=SG/O=SG/CN=lab.ocp.php" -config openssl.conf
openssl x509 -req -in ssl.csr -CA root-CA.crt -CAkey root-CA.key -CAcreateserial -out ssl.crt -days 1000
